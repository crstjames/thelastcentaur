version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: thelastcentaur-postgres
    environment:
      POSTGRES_USER: crstjames
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: thelastcentaur
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crstjames -d thelastcentaur"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: thelastcentaur-backend
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=crstjames
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=thelastcentaur
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CORS_ORIGINS=http://localhost:3002,http://127.0.0.1:3002
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
      - backend_node_modules:/app/node_modules

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: thelastcentaur-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    ports:
      - "3002:3002"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:
